services:
  nginx:
    image: nginx:1.25.4
    container_name: visualizer_nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/www/sorting-visualizer/config/nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - /var/www/sorting-visualizer:/app
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - gunicorn
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  redis:
    image: redis:7.2.4
    container_name: visualizer_redis
    restart: always
    ports:
      - "6579:6579"
    volumes:
      - /dÐ°ta/redis:/root/redis
    command: --port 6579
    environment:
      - REDIS_PORT=6579
  db:
    image: postgres:15.6
    container_name: visualizer_db
    environment:
      - POSTGRES_DB=sorting_visualizer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432" # Publishes 5432 to other containers but NOT to host machine
    command: -p 5432
  gunicorn:
    build:
      dockerfile: Dockerfile-prod
    container_name: visualizer_gunicorn
    command: >
      sh -c "python manage.py migrate --settings config.settings.prod &&
             python manage.py collectstatic --noinput --settings config.settings.prod &&
             /usr/bin/supervisord -c /etc/supervisord.conf &&
             gunicorn visualizer.wsgi:application --name visualizer_app --workers 3 --bind=unix:/app/run/gunicorn.sock --log-level=info"
    expose:
      - 9000
    volumes:
      - /var/www/sorting-visualizer:/app
#    ports:
#      - "9000:9000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_NAME=sorting_visualizer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
  supervisor:
    build:
      dockerfile: Dockerfile-prod
    container_name: visualizer_supervisor
    command: >
      sh -c "/usr/bin/supervisord -c /etc/supervisord.conf"
    volumes:
      - type: bind
        source: /config/supervisor/supervisord.conf
        target: /etc/supervisord.conf
      - type: bind
        source: /config/supervisor/daphne.ini
        target: /etc/supervisor.d/daphne.ini
    environment:
      - POSTGRES_NAME=sorting_visualizer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
#volumes:
#  code:
